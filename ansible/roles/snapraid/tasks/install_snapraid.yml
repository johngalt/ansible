---
- name: Get current snapraid version if installed
  ansible.builtin.command: snapraid --version
  register: _snapraid_version_output
  changed_when: false
  ignore_errors: true
  check_mode: false

- name: Set current snapraid version variable
  ansible.builtin.set_fact:
    snapraid_installed_version: "{{ _snapraid_version_output.stdout.split()[1] | regex_replace('^v', '') }}"
  when: _snapraid_version_output.rc == 0

- name: Mark snapraid for install if not installed
  ansible.builtin.set_fact:
    snapraid_update_needed: true
  when: _snapraid_version_output.rc != 0

- name: Mark snapraid for update if newer version is set
  ansible.builtin.set_fact:
    snapraid_update_needed: true
  when: snapraid_version is version(snapraid_installed_version|default("0"), '>')

- name: Install/update snapraid from source
  when: snapraid_update_needed is defined
  notify: Cleanup snapraid download directory
  block:
    - name: Install dependencies
      ansible.builtin.apt:
        name: ['build-essential', 'libz-dev']
        state: present
        update_cache: true
    - name: Get release from GitHub
      ansible.builtin.unarchive:
        src: "https://github.com/amadvance/snapraid/releases/download/v{{ snapraid_version }}/snapraid-{{ snapraid_version }}.tar.gz"
        dest: /tmp/
        remote_src: true
    - name: Configure snapraid
      ansible.builtin.command:
        cmd: ./configure
        chdir: "/tmp/snapraid-{{ snapraid_version }}"
      changed_when: true
    - name: Make snapraid
      ansible.builtin.command:
        cmd: make
        chdir: "/tmp/snapraid-{{ snapraid_version }}"
      changed_when: true
    - name: Make install snapraid
      ansible.builtin.command:
        cmd: make install
        chdir: "/tmp/snapraid-{{ snapraid_version }}"
      changed_when: true
    - name: Create snapraid content directory
      ansible.builtin.file:
        path: "/var/snapraid"
        state: directory
        owner: root
        group: root
        mode: "0755"
